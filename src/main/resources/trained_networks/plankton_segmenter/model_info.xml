<network version="2.1">
  <name>unet_resnet34_plankton</name>
  <description>unet with ResNet43 backbone trained for image segmentation</description>
  <type>unet_resnet34</type>
  <date>2021-06-06_144828</date>
  <protobuf>frozen_model.pb</protobuf>
  <params>
    <augmentation>OrderedDict([('bias', None), ('gain', [0.8, 1, 1.2]), ('gamma', [0.5, 1, 2]), ('gaussian_noise', None), ('orig_img_shape', [256, 256, 3]), ('random_crop', None), ('rotation', [0, 360]), ('zoom', [0.9, 1, 1.1])])</augmentation>
    <cnn>OrderedDict([('activation', 'relu'), ('blocks', None), ('dense', None), ('filters', 4), ('global_pooling', None), ('id', 'base_cyclic'), ('img_shape', [224, 224, 3]), ('img_type', 'rgb'), ('use_asoftmax', False), ('use_batch_norm', True)])</cnn>
    <dataset>OrderedDict([('map_others', False), ('memmap_directory', None), ('min_count', 10), ('num_classes', None), ('random_seed', 0), ('source', None), ('val_split', 0.2)])</dataset>
    <description></description>
    <name></name>
    <output>OrderedDict([('output_dir', None), ('save_mislabeled', True), ('save_model', True)])</output>
    <training>OrderedDict([('alr_drops', 4), ('alr_epochs', 10), ('batch_size', 64), ('max_epochs', 10000), ('monitor_val_loss', False), ('use_augmentation', True), ('use_class_undersampling', False), ('use_class_weights', True)])</training>
  </params>
  <inputs>
    <input>
      <name>image</name>
      <operation>data</operation>
      <height>224</height>
      <width>224</width>
      <channels>3</channels>
    </input>
  </inputs>
  <outputs>
    <output>
      <name>pred</name>
      <operation>sigmoid/Sigmoid</operation>
      <height>224</height>
      <width>224</width>
      <channels>1</channels>
    </output>
  </outputs>
  <source_data>F80</source_data>
  <source_size>0.0</source_size>
  <labels/>
  <prepro>
    <name>rescale</name>
    <params>
      <param>255</param>
      <param>0</param>
      <param>1</param>
    </params>
  </prepro>
  <accuracy>0</accuracy>
  <precision>0.0</precision>
  <recall>0.0</recall>
  <f1score>0.0</f1score>
  <load>
    <training_epochs>1000</training_epochs>
    <training_time>0</training_time>
    <training_split>0.2</training_split>
    <training_time_per_image>nan</training_time_per_image>
    <inference_time_per_image>0.0</inference_time_per_image>
  </load>
</network>
